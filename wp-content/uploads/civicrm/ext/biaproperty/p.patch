diff --git a/CRM/Biaproperty/Form/Property.php b/CRM/Biaproperty/Form/Property.php
index 34af778..77e973e 100644
--- a/CRM/Biaproperty/Form/Property.php
+++ b/CRM/Biaproperty/Form/Property.php
@@ -188,9 +188,8 @@ class CRM_Biaproperty_Form_Property extends CRM_Core_Form {
       }
       $apiParams = ['values' => $params];
       if ($action == 'update') {
-       $apiParams['where'] = ['id', '=', $this->_id];
+       $apiParams['where'][] = ['id', '=', $this->_id];
       }
-
       $propertyID = civicrm_api4('Property', $action, $apiParams)->first()['id'];
 
       if (!$this->getEntityId()) {
diff --git a/CRM/Biaproperty/Form/Unit.php b/CRM/Biaproperty/Form/Unit.php
index 1bb287b..a3a8290 100644
--- a/CRM/Biaproperty/Form/Unit.php
+++ b/CRM/Biaproperty/Form/Unit.php
@@ -49,11 +49,19 @@ class CRM_Biaproperty_Form_Unit extends CRM_Core_Form {
 
     $this->_action = CRM_Utils_Request::retrieve('action', 'String', $this);
     $this->assign('action', $this->_action);
-
+    $session = CRM_Core_Session::singleton();
     $this->_id = CRM_Utils_Request::retrieve('id', 'Positive', $this, FALSE);
     $this->_bid = CRM_Utils_Request::retrieve('bid', 'Positive', $this, FALSE);
+    $context = CRM_Utils_Request::retrieve('context', 'Alphanumeric', $this, FALSE);
     if (empty($this->_id)) {
       $this->_pid = CRM_Utils_Request::retrieve('pid', 'Positive', $this, TRUE);
+      if (!empty($this->_pid)) {
+	$property = Property::get()->addWhere('id', '=', $this->_pid)->execute()->first();
+	$session->replaceUserContext(CRM_Utils_System::url('civicrm/biaunits') . '#?pid=' . $this->_pid . '&title=' . (!empty($property['name']) ? $property['name'] . ' - ' : '') . $property['property_address']);
+      }
+      else {
+        $session->replaceUserContext(CRM_Utils_System::url('civicrm/contact/view', ['cid' => $this->_bid, 'reset' => 1, 'selectedChild' => 'afsearchUnit1']));
+      }
     }
     CRM_Utils_System::setTitle('Add Unit');
     if ($this->_id) {
@@ -66,7 +74,13 @@ class CRM_Biaproperty_Form_Unit extends CRM_Core_Form {
       $this->_pid = $this->_unit['property_id'];
       $this->assign('unit', $this->_unit);
       $session = CRM_Core_Session::singleton();
-      $session->replaceUserContext(CRM_Utils_System::url('civicrm/unit/form', ['id' => $this->getEntityId(), 'action' => 'update']));
+      if ($context === 'propertyView') {
+	$property = Property::get()->addWhere('id', '=', $this->_pid)->execute()->first();
+	$session->replaceUserContext(CRM_Utils_System::url('civicrm/biaunits') . '#?pid=' . $this->_pid . '&title=' . (!empty($property['name']) ? $property['name'] . ' - ' : '') . $property['property_address']);
+      }
+      else {
+        $session->replaceUserContext(CRM_Utils_System::url('civicrm/unit/form', ['id' => $this->getEntityId(), 'action' => 'update']));
+      }
     }
   }
 
@@ -104,7 +118,7 @@ class CRM_Biaproperty_Form_Unit extends CRM_Core_Form {
           $this->addUploadElement($element);
           continue;
         }
-        elseif ($element == 'business_id') {
+	elseif ($element == 'business_id') {
           $element = $this->addEntityRef($element, $label, ['placeholder' => '- Select Business -', 'create' => TRUE, 'multiple' => TRUE, 'api' => [
             'params' => ['contact_type' => 'Organization'],
       	  ]]);
@@ -164,7 +178,7 @@ class CRM_Biaproperty_Form_Unit extends CRM_Core_Form {
     if (!empty($fields['unit_status']) && $fields['unit_status'] == 1 && empty($fields['business_id'])) {
       $errors['business_id'] = ts('Please select a business.');
     }
-    if (!empty($fields['address_id']) && empty($form->_id)) {
+    if (!empty($fields['address_id']) && !empty($form->_id)) {
       $count = Unit::get(FALSE)->addWhere('address_id', '=', $fields['address_id'])->execute()->count();
       if ($count > 0) {
         $errors['address_id'] = ts('There is a existing property unit at this mailing address. Please choose a different unit address.');
diff --git a/CRM/Contact/Form/Edit/Property.php b/CRM/Contact/Form/Edit/Property.php
index 7b49578..92cfa96 100644
--- a/CRM/Contact/Form/Edit/Property.php
+++ b/CRM/Contact/Form/Edit/Property.php
@@ -53,8 +53,24 @@ class CRM_Contact_Form_Edit_Property extends CRM_Core_Form {
      });
     ");
 
+    $form->addFormRule([__CLASS__, 'formRule'], $form);
     $form->assign('elements', $elements);
     parent::buildQuickForm();
   }
 
+    public static function formRule($fields, $files = [], $self = NULL) {
+      $errors = [];
+      if (!empty($fields['property_id']) && $fields['is_voter'] == 0) {
+        $count = \Civi\Api4\PropertyOwner::get(FALSE)
+        ->addWhere('property_id', '=', $fields['property_id'])
+        ->execute()
+        ->count();
+        if ($count == 0) {
+          $errors['is_voter'] = ts('For \'Vote?\' please select Yes');
+        }
+      }
+
+      return $errors;
+    }
+
 }
diff --git a/biaproperty.php b/biaproperty.php
index d27f488..1b1ee2b 100644
--- a/biaproperty.php
+++ b/biaproperty.php
@@ -161,6 +161,7 @@ function biaproperty_civicrm_links($op, $objectName, $objectId, &$links, &$mask,
         'url' => CRM_Utils_System::url('civicrm/close-business', 'bid=' . $objectId),
       ];
     }
+/*
     $links[] = [
       'title' => 'Add / Buy Property',
       'name' => 'Add / Buy Property',
@@ -169,6 +170,7 @@ function biaproperty_civicrm_links($op, $objectName, $objectId, &$links, &$mask,
       'class' => 'no-popup',
       'url' => CRM_Utils_System::url('civicrm/existing/property', 'reset=1&action=add&context=create&oid=' . $objectId),
     ];
+*/
     if (in_array('Member (Property Owner)', $subTypes) || empty($subTypes) || $contactType == 'Individual') {
       $links[] = [
         'title' => 'Become Member (Business)',
@@ -253,6 +255,10 @@ function biaproperty_civicrm_buildForm($formName, &$form) {
       'Members_Property_Owners_' => 'Property',
     ] as $ctype => $entity) {
       if (strstr($form->_contactSubType, $ctype)) {
+if ($form->getVar('_contactId')) {
+ continue;
+}
+        unset($options['Address']);
         $options = [$entity => ts($entity)] + $options;
         $className = 'CRM_Contact_Form_Edit_' . $entity;
         $className::buildQuickForm($form);
@@ -289,6 +295,8 @@ function biaproperty_civicrm_postProcess($formName, &$form) {
           ->execute();
       }
     }
+    if (empty($form->_contactId) && in_array('Property', $options)) {
+    }
   }
 }
 
diff --git a/templates/CRM/Contact/Form/Edit/Property.tpl b/templates/CRM/Contact/Form/Edit/Property.tpl
index ac34996..1210c91 100644
--- a/templates/CRM/Contact/Form/Edit/Property.tpl
+++ b/templates/CRM/Contact/Form/Edit/Property.tpl
@@ -16,3 +16,26 @@
   </div>
 </div>
 </div>
+
+{literal}
+<script type="text/javascript">
+  CRM.$(function($) {
+   $('#_qf_Contact_cancel-bottom, #_qf_Contact_cancel-top').on('click', function(){
+     if ($('#property_id').val() > 0) {
+       CRM.api4({propertyOwners: ['PropertyOwner', 'get', {
+  where: [["property_id", "=", $('#property_id').val()]],
+}]}).then(function(batch) {
+   if (batch.propertyOwners.count === 0) {
+     CRM.api4({results: ['Property', 'delete', {
+       where: [["id", "=", $('#property_id').val()]]
+     }]});
+     CRM.api4({results: ['Unit', 'delete', {
+       where: [["property_id", "=", $('#property_id').val()]]
+     }]});
+   }
+});
+     }
+   });
+  });
+</script>
+{/literal}
